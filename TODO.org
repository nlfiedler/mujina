* Mujina
** Next
*** TODO Fix the broken tests (redux-saga changed, tests need updating)
*** TODO Search page seems to be broken, displays nothing
*** TODO Need to handle the =BigInt= type in the GraphQL schema wrt =filesize=
*** DONE Update =react-redux= to 7.0, remove =react-router-redux=
*** TODO See how to use =Link=, =NavLink=, and =Redirect= from =react-router=
*** TODO Updating =gulp-babel= will require updating babel as well
*** TODO Updating react-resize-detector causes thumbnail layout to be broken
**** huge gaps and everything seems off
*** TODO Should replace =react-redux-form= with =formik=
**** =react-redux-form= is now in maintenance mode
**** c.f. https://github.com/jaredpalmer/formik
*** TODO Consider rewrite using ReasonML
**** One commercial developer strongly advocates using ReasonML with Electron
**** TODO Understand how =redux-saga= works and how ReasonML can do something similar
***** reductive has a bunch of "thunk" examples that may be what was intended
***** reductive has =middleware.re= which is an example of how to do it
***** Extract that middleware example into a utility function
***** TODO See [[http://2ality.com/2018/01/iterators-reasonml.html][ReasonML iterators]] for an alternative to generators seen in redux-saga
***** TODO See [[https://redux-observable.js.org][redux-observable]] for an alternative method that does not use generators
**** TODO Look at https://github.com/cristianoc/genType for JavaScript interop
**** TODO Consider how to interact with React libraries from ReasonReact
- react-lazyload-fadein
- react-resize-detector
- react-visibility-sensor

**** TODO Consider how to organize the source code; Reason tends to be flat
**** TODO Consider how to use =reductive= instead of =redux= and =react-redux=
**** TODO Convert some React components to ReasonReact [0/22]
- [ ] AssetEditPage
- [ ] AssetEditor
- [ ] AssetPage
- [ ] AssetPreview
- [ ] AssetSidebar
- [ ] Attribute
- [ ] AttributeList
- [ ] ErrorMessage
- [ ] ErrorPage
- [ ] FiltersPanel
- [ ] HomePage
- [ ] NewFile
- [ ] NewFileList
- [ ] OptionsForm
- [ ] OptionsPage
- [ ] SearchBar
- [ ] SearchPage
- [ ] ThumbnailCard
- [ ] ThumbnailColumn
- [ ] ThumbnailGrid
- [ ] UploadPage
- [ ] UploadProgress

**** TODO Convert some JavaScript to ReasonML [0/11]
- [ ] actions.js
- [ ] api.js
- [ ] config.js
- [ ] main.js
- [ ] menu.js
- [ ] preview.js
- [ ] query.js
- [ ] reducers.js
- [ ] renderer.js
- [ ] sagas.js
- [ ] store.js

**** TODO Rewrite the =App= component in ReasonML and use ReasonReact router
***** TODO Adapt the ReasonReact router to use its =push= function
***** TODO Remove =react-router= and =react-router-redux= dependencies
**** TODO Remove =PropTypes= once conversion to ReasonReact is complete
***** TODO Remove =prop-types= dependency
*** TODO Consider translating to TypeScript if ReasonML proves difficult
**** works well with redux.js
*** TODO Consider using [[https://github.com/neon-bindings/neon][Neon bindings]] to write some parts in Rust
*** TODO Can =npm test= rebuild the code first without doing "test" build?
*** TODO Fix the [[https://electronjs.org/docs/tutorial/security][content security policy]] thing
*** TODO Tags edit needs to refresh tags list, clear affected selections
**** select a wonky tag, edit the asset(s), tag is effectively gone now
**** tags list needs to be refreshed
**** selected tags need to have removed tag cleared
*** TODO Rewrite interface using [[https://tailwindcss.com/docs/what-is-tailwind/][Tailwind CSS]]
**** Look at https://github.com/Pagedraw/pagedraw for building the interface
**** Look at Sketch or Figma for designing the interface
**** c.f. https://adamwathan.me/css-utility-classes-and-separation-of-concerns/
**** Completely redesign the interface, I don't like the current one
***** I keep looking for a button at the top left to go back to the previous screen
***** Selectors should be collapsed to a narrow vertical bar on left side
***** Clicking on selectors will display a slideout panel to show all selectors
***** Currently selected attributes are shown at the top
***** Currently selected attributes have an ~X~ button to deselect
**** Issues to address
***** Closing the asset preview page goes Home, instead of the previous page, e.g. Search
****** Should probably use the history to go back to the previous route
** Anytime
*** Asset page
**** TODO Resize window and observe that middle component does not resize well
**** TODO ThumbnailColumn images should have tiny margins
**** TODO Use a =:hover= style to accent the images on mouseover
Lighten them perhaps?

**** TODO Clicking on asset in preview screen should show it full size
- Need a semi-transparent "delete" button in the corner to go back

**** TODO Use an "image slider" to move from one asset to the next
- There are lots and lots of these
- c.f. https://github.com/benhowell/react-grid-gallery

**** TODO Show image/video resolution in asset sidebar
*** Thumbnail view
**** TODO Fetch results as needed, rather than all at once
- c.f. https://github.com/reasonml-community/reason-react-hacker-news/blob/master/src/TopStoriesPage.re
  - listens for scroll event on the window and fetches more content
- Have to fetch for =AssetSelector= component as well
- Because of the thumbnail size calculation, first fetch is really slow
- Should fetch new results as the user scrolls down
- Need new actions that append to the results rather than overwrite
  - action includes the page number to fetch
- Fetch a batch at a time (like 18) until there are enough to fill the screen

**** TODO Hover should show asset date/time, caption, maybe filename
- See =Image.js= in https://github.com/benhowell/react-grid-gallery

**** TODO Use hover "overlay" button to select assets to operate on
- See =CheckButton.js= in https://github.com/benhowell/react-grid-gallery

**** TODO Show "No matching assets" when asset list is empty (and filters are set)
*** Quick Ones
**** TODO [[https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore][You may not need lodash]]
**** TODO Allow editing the media type of assets
**** TODO Change buttons to use textual labels versus icons
The icons are kinda cryptic, text is much more obvious

**** TODO Some text should not be selectable, Bloomer has isUnselectable
**** TODO Asset edit page button improvements
- "Edit" changes to "Cancel" when editing
- "Save" button at the bottom of the screen

*** Glitches
**** TODO When scrolling thumbnails very quickly, seems to stop rendering at all
**** TODO Does =react-lazyload-fadein= support unloading the images when they are no longer visible?
- May be =react-transition-group= supports this?
- Or may need to hack/extend =react-lazyload-fadein= to do it

**** TODO Handle search query string errors better
- Currently, an error in the query goes to the error page without any helpful hint
- Currently, once the query is wrong, you can never fix it because it directly goes to the error page

**** TODO Show helpful text and examples on search page instead of results
- See Sublime Merge "search" screen as a nice example

**** TODO Attribute selection change frequency may need deboucing
- In =sagas.js= consider a delay with =watchSelectorToggles= to avoid frequent fetching
  (see "Debouncing" in [[https://redux-saga.js.org/docs/recipes/][recipes]] on redux-sagas site)

*** Bulk Edit
**** TODO Short term solution akin to perkeep web interface [0/4]
- [ ] Easy selection with hover checkbox button
  - Could use =svg= tag to render the button
  - See pexels.com in that it uses article tag, with nested img and button with nested svg
- [ ] When selections, filters panel changes to show available actions
- [ ] Actions include adding, deleting tags, setting location
  - This is basically a simplified bulk edit
- [ ] Use a prefix for the checksum values

**** TODO Design bulk edit solution, probably similar to JIRA [0/5]
- [ ] Access the bulk edit screen via a menu item
- [ ] Use search form
- [ ] Perform search, present results using "list" view
- [ ] Check off results as desired
- [ ] Next page presents several operations [0/8]
  - [ ] add location
  - [ ] remove location
  - [ ] rename location
  - [ ] add a tag
  - [ ] remove a tag
  - [ ] rename a tag
  - [ ] set caption
  - [ ] change media type

*** Uploads
**** TODO Show a larger thumbnail on hover over small thumbnail
**** TODO Add menu/button to navigate to upload screen
- Big "primary" style button on home screen?
- Menu item to reach upload screen
- Add a button on the upload screen to select additional files

**** TODO Tag and location completion on uploads page
**** TODO Add a button to remove a single upload entry from the list
**** TODO Consider how to show uploads.error in NewFileList page
**** TODO Sometimes dropping an image just opens the image
- c.f. https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/
- Pretty difficult to reproduce
- Handle 'open-url' and/or 'open-file' on the app instance in main.js
- Is there a browser event when the page is about to unload?
- Mouse pointer may or may not have green plus icon, means nothing
- Modifier keys make no difference
- Showing a thumbnail or showing just a filename during drag means nothing
- Is there a React event that App can listen for, like "unmount"?
  - and if that happens, fire an action to navigate back home
- Maybe intercept the 'will-nagivate' event?
  - Would need to know if our app initiated the event
- Maybe a menu item to get back "Home"
- Maybe a periodic check in main.js to ensure webContents are what is expected

**** TODO Consider a "recent uploads" button to show newly added assets
**** TODO Show a fancy help overlay thingy on dragover
- See Slack, which shows an overlay while dragging over the window
- Probably need to add dragover and drop handlers to the top-level App component

*** Videos
**** TODO Get video playback working again
***** c.f. https://github.com/matvp91/indigo-player
***** Also does not work with webui in Chrome
***** Seems to work with some videos (like potowatomi from 2014)
**** TODO How to get large videos into storage?
- Files up to 100MB seem to be okay, but what about really large files?

**** TODO Use video tag for thumbnail view
**** TODO Show 5 or so frames from the video on hover
**** TODO Show placeholder icons for videos that fail to load
*** Refinements
**** TODO Toolbar buttons (or something) to change thumbnail view
 - See lynapp.com screenshot
 - Icon view: the 240x240 thumbnails with some details as captions
 - Gallery view: the justified progressive image-only layout
 - List view: show 96x96 thumbnails and details in list format
   - should have column resizing

**** TODO Show filters tab containing first selection
 That is, if only a location is selected, when switching back to the home page,
 the tags tab is selected by default, and the locations is not showing.

**** TODO Advanced search features
***** TODO "is:image" and similar are converted to "mimetype:image/*" :tanuki:
***** TODO "with:<name>" for searching people
***** TODO logical operators (and, or) and grouping with parentheses

**** TODO Have a timeline feature like Google Photos
 - Looks like Time Machine timeline, with marks and years, expands on hover
 - See the Bulma-Extensions Timeline component

**** TODO Better tags input
 - Use Bulma-Extensions TagsInput on the asset edit screen

**** TODO Look at using webpack to produce concise output for main and renderer
***** Can then make all dependencies "devDependencies" to shrink the build down
***** c.f. https://hackernoon.com/electron-on-the-appstore-pain-tears-ii-88414921e72d
***** Also note their advice on removing unsupported languages
**** TODO Consider setting the application menu appropriately for macOS and win32
**** TODO Consider not packing ffmpeg/ffprobe into the build, they are huge
***** Instead, download the appropriate version on the first run.
***** c.f. https://github.com/orionhealth/electron-packager-plugin-non-proprietary-codecs-ffmpeg
 - pertinent code from the above project
 #+BEGIN_SRC javascript
 const downloadFFMPEG = (electronVersion, platform, arch) =>
   new Promise((resolve, reject) => {
     if (!semver.satisfies(electronVersion, '>=0.36.8')) return reject(new Error('Electron version too low'));
     if (!process.env.TESTING) console.log(`Downloading patent safe FFMPEG for platform ${platform} ${arch} using electron v${electronVersion}`);

     const tmpPath = path.resolve(os.tmpdir(), 'tmp-safe-ffmpeg');
     mkdirp(tmpPath, (err) => {
       if (err) return reject(err);

       const ffmpegFileName = `ffmpeg-v${electronVersion}-${platform}-${arch}.zip`;
       const downloadPath = path.resolve(tmpPath, ffmpegFileName);

       if (fs.existsSync(downloadPath)) return resolve(downloadPath);

       const downloadStream = fs.createWriteStream(downloadPath);
       request({
         url: `https://github.com/electron/electron/releases/download/v${electronVersion}/${ffmpegFileName}`,
         followAllRedirects: true,
         timeout: 10000,
         gzip: true,
       })
       .on('error', (downloadError) => {
         reject(downloadError);
       })
       .pipe(downloadStream)
       .on('close', () => {
         resolve(downloadPath);
       });
     });
   });
 #+END_SRC

**** TODO Consider whether we need to exclude proprietary version of ffmpeg
 - it comes with electron for some reason
 - see if it is the encumbered version or not
 - c.f. [[https://github.com/orionhealth/electron-packager-plugin-non-proprietary-codecs-ffmpeg][electron-packager-plugin-non-proprietary-codecs-ffmpeg]]

**** TODO Create a "New Window" menu item that invokes createWindow()
**** TODO Set the browser window title (in index.html) to something sensible
**** TODO When selecting attributes, disable those that no longer help
**** TODO Maybe a set of Tabs to select between Pictures, Music, Videos, Documents, etc
**** TODO Read https://fb.me/react-error-boundaries to learn about error handling
**** TODO Decent about window (c.f. [[https://github.com/rhysd/electron-about-window][electron-about-window]])
** Investigate
*** TODO What format are =AAE= files and can we show them somehow?
*** TODO How to search for assets with no tags or location?
- GraphQL works, but it is beyond the capability of non-technical people

*** TODO What does supporting emoji codes (in captions/comments) entail?
*** TODO Investigate how to localize the app
- https://www.npmjs.com/package/oftn-l10n
- https://developer.mozilla.org/en-US/docs/Mozilla/Localization/Localization_content_best_practices

*** TODO Find out how to handle unresponsive windows
*** TODO See https://github.com/Quramy/electron-jsx-babel-boilerplate/
- uses gulp to minify and uglify everything

*** TODO Drag and drop from Photos is not working
- Update: it works as of 2018-11-17, but the filenames are weird, and seemingly not full quality
- See the yelp.com page for adding photos, it works with Photos app
- No drag events are fired at all, it just does nothing
- See the Electron guide for native drag & drop
- Handle 'open-url' and/or 'open-file' on the app instance in main.js
- Maybe look at that relatively new DataTransfer API business

*** TODO Look for library to connect to devices to extract photos
